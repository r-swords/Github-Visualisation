{"ast":null,"code":"var _jsxFileName = \"/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport repo from './repofile.json';\nimport contrib from './contribfile.json';\nimport commit from './commitfile.json';\nimport ReactDOM from 'react-dom';\nimport { VictoryBar, VictoryPie, VictoryChart, VictoryArea } from 'victory';\nimport { Chart } from 'react-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState('name');\n  var [languages, setLanguages] = useState([]);\n  var [languageArray, setLanguageArray] = useState([]);\n  var [contributors, setContributors] = useState([]);\n  var [commits, setCommits] = useState([]);\n  useEffect(() => {\n    setContributorData(contrib);\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava/languages\").then(res => res.json()).then(data => setLanguageData(data));\n    setCommitData(commit);\n  }, []);\n\n  const setLanguageData = data => {\n    var arr = [];\n    console.log(data);\n    Object.keys(data).forEach(key => arr.push({\n      x: key,\n      y: data[key]\n    }));\n    console.log(arr);\n    setLanguages(arr);\n  };\n\n  const setContributorData = data => {\n    var arr = [];\n    Object.keys(data).forEach(key => arr.push({\n      x: data[key].login,\n      y: data[key].contributions\n    }));\n    console.log(arr);\n    setContributors(arr);\n  };\n\n  const setCommitData = data => {\n    var obj = {};\n\n    for (var commit in data) {\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0, 10));\n\n      if (obj[commitDate]) {\n        obj[commitDate]++;\n      } else {\n        obj[commitDate] = 1;\n      }\n    }\n\n    var arr = [];\n    console.log(obj);\n\n    for (var node in obj) {\n      arr.push({\n        x: new Date(node),\n        y: obj[node]\n      });\n    }\n\n    var arr2 = [];\n    var min = arr[arr.length - 1].x;\n    var max = arr[0].x;\n    var currentDate = min;\n\n    while (currentDate <= max) {\n      var count;\n\n      if (obj[currentDate]) {\n        count = obj[currentDate];\n      } else {\n        count = 0;\n      }\n\n      console.log(currentDate);\n      arr2.push([new Date(currentDate), count]);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    setCommits(arr2);\n    console.log(arr);\n    console.log(arr2);\n  };\n\n  const data = React.useMemo(() => [{\n    label: 'Series 1',\n    data: commits\n  }], []);\n  const series = React.useMemo(() => ({\n    showPoints: false\n  }), []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'utc',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: repo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(VictoryPie, {\n        data: languages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VictoryChart, {\n      children: /*#__PURE__*/_jsxDEV(VictoryBar, {\n        data: contributors,\n        style: {\n          labels: {\n            fontSize: 1,\n            padding: 5\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '500px',\n        height: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: data,\n        series: series,\n        axes: axes,\n        tooltip: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ntoHkFpgwJnUiBTvOQLI5yIu2wM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/App.js"],"names":["React","useState","useEffect","repo","contrib","commit","ReactDOM","VictoryBar","VictoryPie","VictoryChart","VictoryArea","Chart","App","name","setName","languages","setLanguages","languageArray","setLanguageArray","contributors","setContributors","commits","setCommits","setContributorData","fetch","then","res","json","data","setLanguageData","setCommitData","arr","console","log","Object","keys","forEach","key","push","x","y","login","contributions","obj","commitDate","Date","committer","date","substring","node","arr2","min","length","max","currentDate","count","setDate","getDate","useMemo","label","series","showPoints","axes","primary","type","position","labels","fontSize","padding","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport repo from './repofile.json';\nimport contrib from './contribfile.json';\nimport commit from './commitfile.json';\nimport ReactDOM from 'react-dom';\nimport {VictoryBar, VictoryPie, VictoryChart, VictoryArea} from 'victory';\n\nimport { Chart } from 'react-charts'\n\n\n\nfunction App() {\n  const [name, setName] = useState('name');\n  var [languages, setLanguages] = useState([]);\n  var [languageArray, setLanguageArray] = useState([]);\n  var [contributors, setContributors] = useState([]);\n  var [commits, setCommits] = useState([]);\n\n\n  useEffect(() => {\n    setContributorData(contrib);\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava/languages\")\n      .then(res => res.json())\n      .then(data => setLanguageData(data));\n    setCommitData(commit);\n  }, [])\n\n\n  const setLanguageData = (data) => {\n    var arr = [];\n    console.log(data);\n    Object.keys(data).forEach(key => arr.push({x: key, y: data[key]}));\n    console.log(arr);\n    setLanguages(arr);\n  }\n\n  const setContributorData = (data) => {\n    var arr = [];\n    Object.keys(data).forEach(key => arr.push({x: data[key].login, y: data[key].contributions}));\n    console.log(arr);\n    setContributors(arr);\n  }\n\n  const setCommitData = (data) => {\n    var obj = {};\n    for(var commit in data){\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0,10));\n      if(obj[commitDate]){\n          obj[commitDate]++;\n      }\n      else {\n        obj[commitDate] = 1;\n      }\n    }\n    var arr = [];\n    console.log(obj);\n    for(var node in obj){\n        arr.push({x: new Date(node), y: obj[node]})\n    }\n    var arr2 = [];\n    var min = arr[arr.length - 1].x;\n    var max = arr[0].x;\n    var currentDate = min;\n    while(currentDate <= max){\n      var count;\n      if(obj[currentDate]){\n        count = obj[currentDate];\n      }\n      else{\n        count = 0;\n      }\n      console.log(currentDate);\n      arr2.push([new Date(currentDate),count]);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    setCommits(arr2);\n    console.log(arr);\n    console.log(arr2);\n  }\n\n  const data = React.useMemo(\n    () => [\n      {\n        label: 'Series 1',\n        data: commits\n      }\n    ],\n    []\n  )\n\n  const series = React.useMemo(\n    () => ({\n      showPoints: false\n    }),\n    []\n  )\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'utc', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  return (\n    <div className=\"App\">\n      <h1>{repo.name}</h1>\n      <div>\n        <VictoryPie\n          data={languages}\n        />\n      </div>\n      <VictoryChart>\n        <VictoryBar\n          data={contributors}\n          style={{\n            labels: {fontSize: 1, padding: 5}\n          }}\n        />\n      </VictoryChart>\n      <div\n      style={{\n        width: '500px',\n        height: '300px'\n      }}\n      >\n        <Chart data={data} series={series} axes={axes} tooltip />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}