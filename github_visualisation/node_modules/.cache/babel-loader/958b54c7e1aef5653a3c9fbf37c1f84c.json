{"ast":null,"code":"var _jsxFileName = \"/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/UserLine.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //\n\nimport { Chart } from 'react-charts';\nimport commit from './commitfile.json';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserLine({\n  user\n}) {\n  _s();\n\n  const [commits, setCommits] = useState([]);\n  useEffect(() => {\n    setCommitsData(commit);\n  }, []);\n\n  const setCommitsData = data => {\n    var obj = {};\n\n    for (var commit in data) {\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0, 10));\n\n      if (obj[commitDate] && user === data[commit].author.login) {\n        obj[commitDate]++;\n      } else if (user === data[commit].author.login) {\n        obj[commitDate] = 1;\n      }\n    }\n\n    var arr = [];\n\n    for (var node in obj) {\n      arr.push({\n        x: new Date(node),\n        y: obj[node]\n      });\n    }\n\n    var arr2 = [];\n    var currentDate = arr[arr.length - 1].x;\n    var max = arr[0].x;\n\n    while (currentDate <= max) {\n      var count;\n\n      if (obj[currentDate]) {\n        count = obj[currentDate];\n      } else {\n        count = 0;\n      }\n\n      arr2.push([new Date(currentDate), count]);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    setCommits(arr2);\n  };\n\n  const series = React.useMemo(() => ({\n    showPoints: false\n  }), []);\n  const commitData = React.useMemo(() => [{\n    label: 'Commit Count',\n    data: commits\n  }], [commits]);\n  const lineAxes = React.useMemo(() => [{\n    primary: true,\n    type: 'utc',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    data: commitData,\n    series: series,\n    axes: lineAxes,\n    tooltip: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserLine, \"38lvCIp+fb0JYUYoDozxpWMGeh0=\");\n\n_c = UserLine;\nexport default UserLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLine\");","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/UserLine.js"],"names":["React","Chart","commit","useState","useEffect","UserLine","user","commits","setCommits","setCommitsData","data","obj","commitDate","Date","committer","date","substring","author","login","arr","node","push","x","y","arr2","currentDate","length","max","count","setDate","getDate","series","useMemo","showPoints","commitData","label","lineAxes","primary","type","position"],"mappings":"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","sourcesContent":["import React from 'react'\n//\nimport { Chart } from 'react-charts'\nimport commit from './commitfile.json'\nimport { useState, useEffect } from 'react';\n\nfunction UserLine ({ user }){\n\n  const [commits, setCommits] = useState([]);\n\n\n  useEffect(() => {\n    setCommitsData(commit);\n  }, [])\n\n\n  const setCommitsData = (data) => {\n    var obj = {};\n    for(var commit in data){\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0,10));\n      if(obj[commitDate] && user === data[commit].author.login){\n          obj[commitDate]++;\n      }\n      else if (user === data[commit].author.login){\n        obj[commitDate] = 1;\n      }\n    }\n    var arr = [];\n    for(var node in obj){\n        arr.push({x: new Date(node), y: obj[node]})\n    }\n    var arr2 = [];\n    var currentDate = arr[arr.length - 1].x;\n    var max = arr[0].x;\n    while(currentDate <= max){\n      var count;\n      if(obj[currentDate]){\n        count = obj[currentDate];\n      }\n      else{\n        count = 0;\n      }\n      arr2.push([new Date(currentDate),count]);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    setCommits(arr2);\n  }\n\n  const series = React.useMemo(\n    () => ({\n      showPoints: false\n    }),\n    []\n  )\n\n  const commitData = React.useMemo(\n    () => [\n      {\n        label: 'Commit Count',\n        data: commits\n      }\n    ],\n    [commits],\n  )\n  const lineAxes = React.useMemo(\n    () => [\n      { primary: true, type: 'utc', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  return (\n    <Chart data={commitData} series={series} axes={lineAxes} tooltip/>\n  )\n\n}\n\nexport default UserLine\n"]},"metadata":{},"sourceType":"module"}