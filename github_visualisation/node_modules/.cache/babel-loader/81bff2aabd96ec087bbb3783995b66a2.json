{"ast":null,"code":"var _jsxFileName = \"/home/ralph1/Documents/3rd_year/software_eng/project/github_visualisation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState('name');\n  const [languages, setLanguages] = useState('');\n  useEffect(() => {\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava\").then(res => res.json()).then(data => {\n      setData(data);\n    });\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava/languages\").then(res => res.json()).then(data => setLanguages(data));\n  }, []);\n\n  const setData = ({\n    name\n  }) => {\n    setName(name);\n  };\n\n  const fetchTasks = async () => {\n    const res = await fetch('https://api.github.com/reops/r-swords/LCAJava');\n    const data = await res.json();\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \"Object.keys(\", languages, \").map((key, i) => (\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Key Name: \", key]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), \"))\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"e65EZ2MdkaF2O3zm1CljxSvvCpY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/project/github_visualisation/src/App.js"],"names":["useState","useEffect","ReactDOM","App","name","setName","languages","setLanguages","fetch","then","res","json","data","setData","fetchTasks","key","i"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,MAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,+CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADd,EAEGF,IAFH,CAEQG,IAAI,IAAG;AAACC,MAAAA,OAAO,CAACD,IAAD,CAAP;AAAc,KAF9B;AAGAJ,IAAAA,KAAK,CAAC,yDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIL,YAAY,CAACK,IAAD,CAF5B;AAGD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,OAAO,GAAG,CAAC;AAACT,IAAAA;AAAD,GAAD,KAAY;AAC1BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMU,UAAU,GAAG,YAAY;AAC7B,UAAMJ,GAAG,GAAG,MAAMF,KAAK,CAAC,+CAAD,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMF,GAAG,CAACC,IAAJ,EAAnB;AAEA,WAAOC,IAAP;AACD,GALD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,kBAEeE,SAFf,sCAGM;AAAA,6BACE;AAAA,iCAAiBS,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAQC,CAAR;AAAA;AAAA;AAAA;AAAA,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnCQb,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactDOM from 'react-dom';\n\n\n\nfunction App() {\n  const [name, setName] = useState('name');\n  const [languages, setLanguages] = useState('')\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava\")\n      .then(res =>res.json())\n      .then(data =>{setData(data)});\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava/languages\")\n      .then(res => res.json())\n      .then(data => setLanguages(data));\n  }, [])\n\n  const setData = ({name}) => {\n    setName(name);\n  }\n\n  const fetchTasks = async () => {\n    const res = await fetch('https://api.github.com/reops/r-swords/LCAJava')\n    const data = await res.json()\n\n    return data\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>{name}</h1>\n      Object.keys({languages}).map((key, i) => (\n          <p key={i}>\n            <span>Key Name: {key}</span>\n          </p>\n        ))\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}