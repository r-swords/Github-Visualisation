{"ast":null,"code":"var _jsxFileName = \"/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport repo from './repofile.json';\nimport contrib from './contribfile.json';\nimport commit from './commitfile.json';\nimport ReactDOM from 'react-dom';\nimport { VictoryBar, VictoryPie, VictoryChart, VictoryArea } from 'victory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState('name');\n  var [languages, setLanguages] = useState([]);\n  var [languageArray, setLanguageArray] = useState([]);\n  var [contributors, setContributors] = useState([]);\n  var [commits, setCommits] = useState([]);\n  useEffect(() => {\n    setContributorData(contrib);\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava/languages\").then(res => res.json()).then(data => setLanguageData(data));\n    setCommitData(commit);\n  }, []);\n\n  const setLanguageData = data => {\n    var arr = [];\n    console.log(data);\n    Object.keys(data).forEach(key => arr.push({\n      x: key,\n      y: data[key]\n    }));\n    console.log(arr);\n    setLanguages(arr);\n  };\n\n  const setContributorData = data => {\n    var arr = [];\n    Object.keys(data).forEach(key => arr.push({\n      x: data[key].login,\n      y: data[key].contributions\n    }));\n    console.log(arr);\n    setContributors(arr);\n  };\n\n  const setCommitData = data => {\n    var obj = {};\n\n    for (var commit in data) {\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0, 10));\n\n      if (obj[commitDate]) {\n        obj[commitDate]++;\n      } else {\n        obj[commitDate] = 1;\n      }\n    }\n\n    var arr = [];\n    console.log(obj);\n\n    for (var node in obj) {\n      console.log(new Date(node));\n      console.log(obj[node]);\n      arr.push({\n        x: new Date(node),\n        y: obj[node]\n      });\n    }\n\n    var arr2 = [];\n    Object.keys(obj).forEach(key => arr2.push({\n      x: key,\n      y: obj[key]\n    }));\n    setCommits(arr);\n    console.log(arr);\n    console.log(arr2);\n  };\n\n  function setTheLanguages() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: repo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(VictoryPie, {\n        data: languages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VictoryChart, {\n      children: /*#__PURE__*/_jsxDEV(VictoryBar, {\n        data: contributors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VictoryChart, {\n      children: /*#__PURE__*/_jsxDEV(VictoryArea, {\n        data: commits,\n        style: {\n          Labels: {\n            fontSize: 1,\n            padding: 5\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0UECpL07RUYv5e9AzRmth9DgdSA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/App.js"],"names":["useState","useEffect","repo","contrib","commit","ReactDOM","VictoryBar","VictoryPie","VictoryChart","VictoryArea","App","name","setName","languages","setLanguages","languageArray","setLanguageArray","contributors","setContributors","commits","setCommits","setContributorData","fetch","then","res","json","data","setLanguageData","setCommitData","arr","console","log","Object","keys","forEach","key","push","x","y","login","contributions","obj","commitDate","Date","committer","date","substring","node","arr2","setTheLanguages","Labels","fontSize","padding"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport repo from './repofile.json';\nimport contrib from './contribfile.json';\nimport commit from './commitfile.json';\nimport ReactDOM from 'react-dom';\nimport {VictoryBar, VictoryPie, VictoryChart, VictoryArea} from 'victory';\n\n\n\nfunction App() {\n  const [name, setName] = useState('name');\n  var [languages, setLanguages] = useState([]);\n  var [languageArray, setLanguageArray] = useState([]);\n  var [contributors, setContributors] = useState([]);\n  var [commits, setCommits] = useState([]);\n\n\n  useEffect(() => {\n    setContributorData(contrib);\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava/languages\")\n      .then(res => res.json())\n      .then(data => setLanguageData(data));\n    setCommitData(commit);\n  }, [])\n\n\n  const setLanguageData = (data) => {\n    var arr = [];\n    console.log(data);\n    Object.keys(data).forEach(key => arr.push({x: key, y: data[key]}));\n    console.log(arr);\n    setLanguages(arr);\n  }\n\n  const setContributorData = (data) => {\n    var arr = [];\n    Object.keys(data).forEach(key => arr.push({x: data[key].login, y: data[key].contributions}));\n    console.log(arr);\n    setContributors(arr);\n  }\n\n  const setCommitData = (data) => {\n    var obj = {};\n    for(var commit in data){\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0,10));\n      if(obj[commitDate]){\n          obj[commitDate]++;\n      }\n      else {\n        obj[commitDate] = 1;\n      }\n    }\n    var arr = [];\n    console.log(obj);\n    for(var node in obj){\n        console.log(new Date(node))\n        console.log(obj[node])\n        arr.push({x: new Date(node), y: obj[node]})\n    }\n    var arr2 = [];\n    Object.keys(obj).forEach(key => arr2.push({x: key, y: obj[key]}));\n    setCommits(arr);\n    console.log(arr);\n    console.log(arr2);\n  }\n\n\n\n  function setTheLanguages(){\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>{repo.name}</h1>\n      <div>\n        <VictoryPie\n          data={languages}\n        />\n      </div>\n      <VictoryChart>\n        <VictoryBar\n          data={contributors}\n        />\n      </VictoryChart>\n      <VictoryChart>\n\n        <VictoryArea\n          data={commits}\n          style={{\n            Labels: {fontSize: 1, padding: 5}\n          }}\n        />\n      </VictoryChart>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}