{"ast":null,"code":"import observeRect from '@reach/observe-rect';\nimport React from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nexport default function useRect(node, enabled) {\n  var _React$useState = React.useState(node),\n      element = _React$useState[0],\n      setElement = _React$useState[1];\n\n  var _React$useState2 = React.useState({\n    width: 0,\n    height: 0\n  }),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var rectRef = React.useRef(rect);\n  rectRef.current = rect;\n  useIsomorphicLayoutEffect(function () {\n    if (node !== element) {\n      setElement(node);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (enabled && element) {\n      setRect(element.getBoundingClientRect());\n    }\n  }, [element, enabled]);\n  React.useEffect(function () {\n    if (!element || !enabled) {\n      return;\n    }\n\n    var observer = observeRect(element, function (newRect) {\n      setRect(newRect);\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [element, enabled]); // const resolvedRect = React.useMemo(() => {\n  //   if (!element || !(element as Element).tagName) {\n  //     return rect\n  //   }\n  //   const styles = window.getComputedStyle(element as Element)\n  //   return {\n  //     x: rect.x,\n  //     y: rect.y,\n  //     width:\n  //       rect.width -\n  //       parseInt(styles.borderLeftWidth) -\n  //       parseInt(styles.borderRightWidth),\n  //     height:\n  //       rect.height -\n  //       parseInt(styles.borderTopWidth) -\n  //       parseInt(styles.borderBottomWidth),\n  //     top: rect.top,\n  //     right: rect.right,\n  //     bottom: rect.bottom,\n  //     left: rect.left,\n  //   }\n  // }, [element, rect])\n\n  return rect;\n}","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/react/github_visaulisation/node_modules/react-charts/es/hooks/useRect.js"],"names":["observeRect","React","useIsomorphicLayoutEffect","useRect","node","enabled","_React$useState","useState","element","setElement","_React$useState2","width","height","rect","setRect","rectRef","useRef","current","getBoundingClientRect","useEffect","observer","newRect","observe","unobserve"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,OAAvB,EAAgC;AAC7C,MAAIC,eAAe,GAAGL,KAAK,CAACM,QAAN,CAAeH,IAAf,CAAtB;AAAA,MACII,OAAO,GAAGF,eAAe,CAAC,CAAD,CAD7B;AAAA,MAEIG,UAAU,GAAGH,eAAe,CAAC,CAAD,CAFhC;;AAIA,MAAII,gBAAgB,GAAGT,KAAK,CAACM,QAAN,CAAe;AACpCI,IAAAA,KAAK,EAAE,CAD6B;AAEpCC,IAAAA,MAAM,EAAE;AAF4B,GAAf,CAAvB;AAAA,MAIIC,IAAI,GAAGH,gBAAgB,CAAC,CAAD,CAJ3B;AAAA,MAKII,OAAO,GAAGJ,gBAAgB,CAAC,CAAD,CAL9B;;AAOA,MAAIK,OAAO,GAAGd,KAAK,CAACe,MAAN,CAAaH,IAAb,CAAd;AACAE,EAAAA,OAAO,CAACE,OAAR,GAAkBJ,IAAlB;AACAX,EAAAA,yBAAyB,CAAC,YAAY;AACpC,QAAIE,IAAI,KAAKI,OAAb,EAAsB;AACpBC,MAAAA,UAAU,CAACL,IAAD,CAAV;AACD;AACF,GAJwB,CAAzB;AAKAF,EAAAA,yBAAyB,CAAC,YAAY;AACpC,QAAIG,OAAO,IAAIG,OAAf,EAAwB;AACtBM,MAAAA,OAAO,CAACN,OAAO,CAACU,qBAAR,EAAD,CAAP;AACD;AACF,GAJwB,EAItB,CAACV,OAAD,EAAUH,OAAV,CAJsB,CAAzB;AAKAJ,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAY;AAC1B,QAAI,CAACX,OAAD,IAAY,CAACH,OAAjB,EAA0B;AACxB;AACD;;AAED,QAAIe,QAAQ,GAAGpB,WAAW,CAACQ,OAAD,EAAU,UAAUa,OAAV,EAAmB;AACrDP,MAAAA,OAAO,CAACO,OAAD,CAAP;AACD,KAFyB,CAA1B;AAGAD,IAAAA,QAAQ,CAACE,OAAT;AACA,WAAO,YAAY;AACjBF,MAAAA,QAAQ,CAACG,SAAT;AACD,KAFD;AAGD,GAZD,EAYG,CAACf,OAAD,EAAUH,OAAV,CAZH,EAxB6C,CAoCrB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOQ,IAAP;AACD","sourcesContent":["import observeRect from '@reach/observe-rect';\nimport React from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nexport default function useRect(node, enabled) {\n  var _React$useState = React.useState(node),\n      element = _React$useState[0],\n      setElement = _React$useState[1];\n\n  var _React$useState2 = React.useState({\n    width: 0,\n    height: 0\n  }),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var rectRef = React.useRef(rect);\n  rectRef.current = rect;\n  useIsomorphicLayoutEffect(function () {\n    if (node !== element) {\n      setElement(node);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (enabled && element) {\n      setRect(element.getBoundingClientRect());\n    }\n  }, [element, enabled]);\n  React.useEffect(function () {\n    if (!element || !enabled) {\n      return;\n    }\n\n    var observer = observeRect(element, function (newRect) {\n      setRect(newRect);\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [element, enabled]); // const resolvedRect = React.useMemo(() => {\n  //   if (!element || !(element as Element).tagName) {\n  //     return rect\n  //   }\n  //   const styles = window.getComputedStyle(element as Element)\n  //   return {\n  //     x: rect.x,\n  //     y: rect.y,\n  //     width:\n  //       rect.width -\n  //       parseInt(styles.borderLeftWidth) -\n  //       parseInt(styles.borderRightWidth),\n  //     height:\n  //       rect.height -\n  //       parseInt(styles.borderTopWidth) -\n  //       parseInt(styles.borderBottomWidth),\n  //     top: rect.top,\n  //     right: rect.right,\n  //     bottom: rect.bottom,\n  //     left: rect.left,\n  //   }\n  // }, [element, rect])\n\n  return rect;\n}"]},"metadata":{},"sourceType":"module"}