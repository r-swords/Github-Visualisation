{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react'; //\n\nimport { Chart } from 'react-charts';\nimport commit from './commitfile.json';\nimport contrib from './contribfile.json';\nimport { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scatter() {\n  _s();\n\n  const [commits, setCommits] = useState([]);\n  useEffect(() => {\n    var arr = [];\n\n    for (var con in contrib) {\n      arr.push(commitData(contrib[con].login, setCommitsData(commit, contrib[con].login)));\n    }\n\n    setCommits(arr);\n  }, []);\n\n  const setCommitsData = (data, name) => {\n    var obj = {};\n    var comCount = 0;\n    var actCount = 0;\n\n    for (var commit in data) {\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0, 10));\n\n      if (data[commit].author.login !== null && data[commit].author.login === name) {\n        if (!obj[commitDate]) {\n          obj[commitDate] = 1;\n          actCount++;\n        }\n\n        comCount++;\n      }\n    }\n\n    var arr = [comCount, actCount, 5];\n    return arr;\n  };\n\n  const series = React.useMemo(() => ({\n    showPoints: false\n  }), []);\n  const commitData = React.useMemo((label, data) => [{\n    label: label,\n    data: data\n  }], []);\n  const bubbleAxes = React.useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: console.log(commits)\n  }, void 0, false);\n}\n\n_s(Scatter, \"AcDVFOiTFK1nh+T1s+GG/7+aO/M=\");\n\n_c = Scatter;\nexport default Scatter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scatter\");","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/Scatter.js"],"names":["React","Chart","commit","contrib","useState","useEffect","Scatter","commits","setCommits","arr","con","push","commitData","login","setCommitsData","data","name","obj","comCount","actCount","commitDate","Date","committer","date","substring","author","series","useMemo","showPoints","label","bubbleAxes","primary","type","position","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAI,IAAIC,GAAR,IAAeP,OAAf,EAAuB;AACrBM,MAAAA,GAAG,CAACE,IAAJ,CAASC,UAAU,CAACT,OAAO,CAACO,GAAD,CAAP,CAAaG,KAAd,EAAqBC,cAAc,CAACZ,MAAD,EAASC,OAAO,CAACO,GAAD,CAAP,CAAaG,KAAtB,CAAnC,CAAnB;AACD;;AACDL,IAAAA,UAAU,CAACC,GAAD,CAAV;AACD,GANQ,EAMN,EANM,CAAT;;AASA,QAAMK,cAAc,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrC,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,QAAQ,GAAG,CAAf;;AACA,SAAI,IAAIjB,MAAR,IAAkBa,IAAlB,EAAuB;AACrB,UAAIK,UAAU,GAAG,IAAIC,IAAJ,CAASN,IAAI,CAACb,MAAD,CAAJ,CAAaA,MAAb,CAAoBoB,SAApB,CAA8BC,IAA9B,CAAmCC,SAAnC,CAA6C,CAA7C,EAA+C,EAA/C,CAAT,CAAjB;;AACA,UAAGT,IAAI,CAACb,MAAD,CAAJ,CAAauB,MAAb,CAAoBZ,KAApB,KAA8B,IAA9B,IAAsCE,IAAI,CAACb,MAAD,CAAJ,CAAauB,MAAb,CAAoBZ,KAApB,KAA8BG,IAAvE,EAA4E;AAC1E,YAAG,CAACC,GAAG,CAACG,UAAD,CAAP,EAAoB;AAClBH,UAAAA,GAAG,CAACG,UAAD,CAAH,GAAkB,CAAlB;AACAD,UAAAA,QAAQ;AACT;;AACDD,QAAAA,QAAQ;AACT;AACF;;AACD,QAAIT,GAAG,GAAG,CAACS,QAAD,EAAWC,QAAX,EAAqB,CAArB,CAAV;AACA,WAAOV,GAAP;AACD,GAhBD;;AAkBA,QAAMiB,MAAM,GAAG1B,KAAK,CAAC2B,OAAN,CACb,OAAO;AACLC,IAAAA,UAAU,EAAE;AADP,GAAP,CADa,EAIb,EAJa,CAAf;AAOA,QAAMhB,UAAU,GAAGZ,KAAK,CAAC2B,OAAN,CACjB,CAACE,KAAD,EAAOd,IAAP,KAAgB,CACd;AACEc,IAAAA,KAAK,EAAEA,KADT;AAEEd,IAAAA,IAAI,EAAEA;AAFR,GADc,CADC,EAOjB,EAPiB,CAAnB;AASA,QAAMe,UAAU,GAAG9B,KAAK,CAAC2B,OAAN,CACjB,MAAM,CACJ;AAAEI,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GADI,EAEJ;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFI,CADW,EAKjB,EALiB,CAAnB;AAQA,sBACE;AAAA,cACCC,OAAO,CAACC,GAAR,CAAY5B,OAAZ;AADD,mBADF;AAMD;;GA9DQD,O;;KAAAA,O;AAgET,eAAeA,OAAf","sourcesContent":["import React from 'react'\n//\nimport { Chart } from 'react-charts'\nimport commit from './commitfile.json'\nimport contrib from './contribfile.json'\nimport { useState, useEffect } from 'react';\n\nfunction Scatter (){\n\n  const [commits, setCommits] = useState([]);\n\n\n  useEffect(() => {\n    var arr = [];\n    for(var con in contrib){\n      arr.push(commitData(contrib[con].login, setCommitsData(commit, contrib[con].login)))\n    }\n    setCommits(arr);\n  }, [])\n\n\n  const setCommitsData = (data, name) => {\n    var obj = {};\n    var comCount = 0;\n    var actCount = 0;\n    for(var commit in data){\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0,10));\n      if(data[commit].author.login !== null && data[commit].author.login === name){\n        if(!obj[commitDate]){\n          obj[commitDate] = 1;\n          actCount++;\n        }\n        comCount++;\n      }\n    }\n    var arr = [comCount, actCount, 5];\n    return arr;\n  }\n\n  const series = React.useMemo(\n    () => ({\n      showPoints: false\n    }),\n    []\n  )\n\n  const commitData = React.useMemo(\n    (label,data) => [\n      {\n        label: label,\n        data: data\n      }\n    ],\n    [],\n  )\n  const bubbleAxes = React.useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  return (\n    <>\n    {console.log(commits)}\n    </>\n  )\n\n}\n\nexport default Scatter\n"]},"metadata":{},"sourceType":"module"}