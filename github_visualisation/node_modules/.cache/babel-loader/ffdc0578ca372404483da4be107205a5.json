{"ast":null,"code":"var _jsxFileName = \"/home/ralph1/Documents/3rd_year/software_eng/project/github_visualisation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { VictoryPie } from 'victory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState('name');\n  const [languages, setLanguages] = useState('');\n  const [languageArray, setLanguageArray] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava\").then(res => res.json()).then(data => {\n      setData(data);\n    });\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava/languages\").then(res => res.json()).then(data => setLanguageArray(data));\n    console.log(languageArray);\n    const arr = [];\n    Object.keys(languageArray).forEach(key => arr.push({\n      name: key,\n      value: languageArray[key]\n    }));\n    setLanguageArray(arr);\n    console.log(languageArray);\n  }, []);\n\n  const setData = ({\n    name\n  }) => {\n    setName(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VictoryPie, {\n      data: languageArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XehjI/3rCmjlMbGDp+wgYrphq5Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/project/github_visualisation/src/App.js"],"names":["useState","useEffect","ReactDOM","VictoryPie","App","name","setName","languages","setLanguages","languageArray","setLanguageArray","fetch","then","res","json","data","setData","console","log","arr","Object","keys","forEach","key","push","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,SAA3B;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,MAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,+CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADd,EAEGF,IAFH,CAEQG,IAAI,IAAG;AAACC,MAAAA,OAAO,CAACD,IAAD,CAAP;AAAc,KAF9B;AAGAJ,IAAAA,KAAK,CAAC,yDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIL,gBAAgB,CAACK,IAAD,CAFhC;AAGEE,IAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACA,UAAMU,GAAG,GAAG,EAAZ;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYZ,aAAZ,EAA2Ba,OAA3B,CAAmCC,GAAG,IAAIJ,GAAG,CAACK,IAAJ,CAAS;AAACnB,MAAAA,IAAI,EAAEkB,GAAP;AAAYE,MAAAA,KAAK,EAAEhB,aAAa,CAACc,GAAD;AAAhC,KAAT,CAA1C;AACAb,IAAAA,gBAAgB,CAACS,GAAD,CAAhB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACH,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMO,OAAO,GAAG,CAAC;AAACX,IAAAA;AAAD,GAAD,KAAY;AAC1BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEI;AADR;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCQL,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { VictoryPie } from 'victory';\n\n\n\nfunction App() {\n  const [name, setName] = useState('name');\n  const [languages, setLanguages] = useState('');\n  const [languageArray, setLanguageArray] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava\")\n      .then(res =>res.json())\n      .then(data =>{setData(data)});\n    fetch(\"https://api.github.com/repos/r-swords/LCAJava/languages\")\n      .then(res => res.json())\n      .then(data => setLanguageArray(data));\n      console.log(languageArray)\n      const arr = []\n      Object.keys(languageArray).forEach(key => arr.push({name: key, value: languageArray[key]}));\n      setLanguageArray(arr);\n      console.log(languageArray);\n  }, [])\n\n  const setData = ({name}) => {\n    setName(name);\n  }\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>{name}</h1>\n\n\n\n      <VictoryPie\n        data={languageArray}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}