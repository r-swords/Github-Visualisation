{"ast":null,"code":"var _jsxFileName = \"/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/Bar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //\n\nimport { Chart } from 'react-charts';\nimport contrib from './contribfile.json';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Bar() {\n  _s();\n\n  const [contributors, setContributors] = useState([]);\n  useEffect(() => {\n    setContributorData(contrib);\n  }, []);\n\n  const setContributorData = data => {\n    var arr = [];\n    Object.keys(data).forEach(key => arr.push([data[key].login, data[key].contributions]));\n    console.log(arr[0][0]);\n    setContributors(arr);\n  };\n\n  const barSeries = React.useMemo(() => ({\n    type: 'bar'\n  }), []);\n  const contribChartData = React.useMemo(() => [{\n    label: 'Contributor Count',\n    data: contributors\n  }], []);\n  const barAxes = React.useMemo(() => [{\n    primary: true,\n    type: 'ordinal',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left',\n    stacked: true\n  }], []);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    data: contribChartData,\n    series: barSeries,\n    axes: barAxes,\n    tooltip: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Bar, \"dbHBBWqoOUp8ME6TG2c/Xa3NxbE=\");\n\n_c = Bar;\nexport default Bar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bar\");","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/Bar.js"],"names":["React","Chart","contrib","useState","useEffect","Bar","contributors","setContributors","setContributorData","data","arr","Object","keys","forEach","key","push","login","contributions","console","log","barSeries","useMemo","type","contribChartData","label","barAxes","primary","position","stacked"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,kBAAkB,CAACN,OAAD,CAAlB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,kBAAkB,GAAIC,IAAD,IAAU;AACnC,QAAIC,GAAG,GAAG,EAAV;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA0BC,GAAG,IAAIJ,GAAG,CAACK,IAAJ,CAAS,CAACN,IAAI,CAACK,GAAD,CAAJ,CAAUE,KAAX,EAAkBP,IAAI,CAACK,GAAD,CAAJ,CAAUG,aAA5B,CAAT,CAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAZ;AACAH,IAAAA,eAAe,CAACG,GAAD,CAAf;AACD,GALD;;AAOA,QAAMU,SAAS,GAAGpB,KAAK,CAACqB,OAAN,CAChB,OAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP,CADgB,EAIhB,EAJgB,CAAlB;AAOA,QAAMC,gBAAgB,GAAGvB,KAAK,CAACqB,OAAN,CACvB,MAAM,CACJ;AACEG,IAAAA,KAAK,EAAE,mBADT;AAEEf,IAAAA,IAAI,EAAEH;AAFR,GADI,CADiB,EAOvB,EAPuB,CAAzB;AAUA,QAAMmB,OAAO,GAAGzB,KAAK,CAACqB,OAAN,CACd,MAAM,CACJ;AAAEK,IAAAA,OAAO,EAAE,IAAX;AAAiBJ,IAAAA,IAAI,EAAE,SAAvB;AAAkCK,IAAAA,QAAQ,EAAE;AAA5C,GADI,EAEJ;AAAEL,IAAAA,IAAI,EAAE,QAAR;AAAkBK,IAAAA,QAAQ,EAAE,MAA5B;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAFI,CADQ,EAKd,EALc,CAAhB;AAOA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEL,gBAAb;AAA+B,IAAA,MAAM,EAAEH,SAAvC;AAAkD,IAAA,IAAI,EAAEK,OAAxD;AAAiE,IAAA,OAAO;AAAxE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GA1CQpB,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React from 'react'\n//\nimport { Chart } from 'react-charts'\nimport contrib from './contribfile.json';\nimport { useState, useEffect } from 'react';\n\nfunction Bar (){\n\n  const [contributors, setContributors] = useState([]);\n\n  useEffect(() => {\n    setContributorData(contrib);\n  }, [])\n\n  const setContributorData = (data) => {\n    var arr = [];\n    Object.keys(data).forEach(key => arr.push([data[key].login, data[key].contributions]));\n    console.log(arr[0][0]);\n    setContributors(arr);\n  }\n\n  const barSeries = React.useMemo(\n    () => ({\n      type: 'bar'\n    }),\n    []\n  )\n\n  const contribChartData = React.useMemo(\n    () => [\n      {\n        label: 'Contributor Count',\n        data: contributors\n      }\n    ],\n    []\n  )\n\n  const barAxes = React.useMemo(\n    () => [\n      { primary: true, type: 'ordinal', position: 'bottom' },\n      { type: 'linear', position: 'left', stacked: true }\n    ],\n    []\n  )\n  return (\n    <Chart data={contribChartData} series={barSeries} axes={barAxes} tooltip />\n  )\n}\n\nexport default Bar;\n"]},"metadata":{},"sourceType":"module"}