{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react'; //\n\nimport { Chart } from 'react-charts';\nimport commit from './commitfile.json';\nimport contrib from './contribfile.json';\nimport { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scatter() {\n  _s();\n\n  const [commits, setCommits] = useState([]);\n  const [currentUserData, setCurrentUserData] = useState([]);\n  const [userName, setUserName] = useState('');\n  var array = [];\n  useEffect(() => {\n    var arr = [];\n\n    for (var con in contrib) {\n      array = setCommitsData(commit, contrib[con].login);\n      console.log(currentUserData);\n      setUserName(contrib[con].login);\n      arr.push(commitData);\n    }\n\n    setCommits(arr);\n  }, []);\n\n  const set1 = async data => {\n    setCurrentUserData(data);\n  };\n\n  const setCommitsData = (data, name) => {\n    var obj = {};\n    var comCount = 0;\n    var actCount = 0;\n\n    for (var commit in data) {\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0, 10));\n\n      if (data[commit].author !== null && data[commit].author.login === name) {\n        if (!obj[commitDate]) {\n          obj[commitDate] = 1;\n          actCount++;\n        }\n\n        comCount++;\n      }\n    }\n\n    var arr = [comCount, actCount, 5];\n    return arr;\n  };\n\n  const series = React.useMemo(() => ({\n    showPoints: false\n  }), []);\n  const commitData = React.useMemo(() => [{\n    label: userName,\n    data: array\n  }], [array, userName]);\n  const bubbleAxes = React.useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: console.log(commits)\n  }, void 0, false);\n}\n\n_s(Scatter, \"rOyxDSbsyF1C8M7ULfUTmmkAYxc=\");\n\n_c = Scatter;\nexport default Scatter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scatter\");","map":{"version":3,"sources":["/home/ralph1/Documents/3rd_year/software_eng/githhub_api/github-get/github_visualisation/src/Scatter.js"],"names":["React","Chart","commit","contrib","useState","useEffect","Scatter","commits","setCommits","currentUserData","setCurrentUserData","userName","setUserName","array","arr","con","setCommitsData","login","console","log","push","commitData","set1","data","name","obj","comCount","actCount","commitDate","Date","committer","date","substring","author","series","useMemo","showPoints","label","bubbleAxes","primary","type","position"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIS,KAAK,GAAG,EAAZ;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,GAAG,GAAG,EAAV;;AACA,SAAI,IAAIC,GAAR,IAAeZ,OAAf,EAAuB;AACrBU,MAAAA,KAAK,GAAGG,cAAc,CAACd,MAAD,EAASC,OAAO,CAACY,GAAD,CAAP,CAAaE,KAAtB,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AACAG,MAAAA,WAAW,CAACT,OAAO,CAACY,GAAD,CAAP,CAAaE,KAAd,CAAX;AACAH,MAAAA,GAAG,CAACM,IAAJ,CAASC,UAAT;AACD;;AACDb,IAAAA,UAAU,CAACM,GAAD,CAAV;AACD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMQ,IAAI,GAAG,MAAOC,IAAP,IAAgB;AAC3Bb,IAAAA,kBAAkB,CAACa,IAAD,CAAlB;AACD,GAFD;;AAKA,QAAMP,cAAc,GAAG,CAACO,IAAD,EAAOC,IAAP,KAAgB;AACrC,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,QAAQ,GAAG,CAAf;;AACA,SAAI,IAAIzB,MAAR,IAAkBqB,IAAlB,EAAuB;AACrB,UAAIK,UAAU,GAAG,IAAIC,IAAJ,CAASN,IAAI,CAACrB,MAAD,CAAJ,CAAaA,MAAb,CAAoB4B,SAApB,CAA8BC,IAA9B,CAAmCC,SAAnC,CAA6C,CAA7C,EAA+C,EAA/C,CAAT,CAAjB;;AACA,UAAGT,IAAI,CAACrB,MAAD,CAAJ,CAAa+B,MAAb,KAAwB,IAAxB,IAAgCV,IAAI,CAACrB,MAAD,CAAJ,CAAa+B,MAAb,CAAoBhB,KAApB,KAA8BO,IAAjE,EAAsE;AACpE,YAAG,CAACC,GAAG,CAACG,UAAD,CAAP,EAAoB;AAClBH,UAAAA,GAAG,CAACG,UAAD,CAAH,GAAkB,CAAlB;AACAD,UAAAA,QAAQ;AACT;;AACDD,QAAAA,QAAQ;AACT;AACF;;AACD,QAAIZ,GAAG,GAAG,CAACY,QAAD,EAAWC,QAAX,EAAqB,CAArB,CAAV;AACA,WAAOb,GAAP;AACD,GAhBD;;AAkBA,QAAMoB,MAAM,GAAGlC,KAAK,CAACmC,OAAN,CACb,OAAO;AACLC,IAAAA,UAAU,EAAE;AADP,GAAP,CADa,EAIb,EAJa,CAAf;AAOA,QAAMf,UAAU,GAAGrB,KAAK,CAACmC,OAAN,CACjB,MAAM,CACJ;AACEE,IAAAA,KAAK,EAAE1B,QADT;AAEEY,IAAAA,IAAI,EAAEV;AAFR,GADI,CADW,EAOjB,CAACA,KAAD,EAAQF,QAAR,CAPiB,CAAnB;AASA,QAAM2B,UAAU,GAAGtC,KAAK,CAACmC,OAAN,CACjB,MAAM,CACJ;AAAEI,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GADI,EAEJ;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFI,CADW,EAKjB,EALiB,CAAnB;AAQA,sBACE;AAAA,cACCvB,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AADD,mBADF;AAMD;;GAxEQD,O;;KAAAA,O;AA0ET,eAAeA,OAAf","sourcesContent":["import React from 'react'\n//\nimport { Chart } from 'react-charts'\nimport commit from './commitfile.json'\nimport contrib from './contribfile.json'\nimport { useState, useEffect } from 'react';\n\nfunction Scatter (){\n\n  const [commits, setCommits] = useState([]);\n  const [currentUserData, setCurrentUserData] = useState([]);\n  const [userName, setUserName] = useState('');\n  var array = []\n\n\n  useEffect(() => {\n    var arr = [];\n    for(var con in contrib){\n      array = setCommitsData(commit, contrib[con].login);\n      console.log(currentUserData);\n      setUserName(contrib[con].login)\n      arr.push(commitData);\n    }\n    setCommits(arr);\n  }, [])\n\n  const set1 = async (data) => {\n    setCurrentUserData(data);\n  }\n\n\n  const setCommitsData = (data, name) => {\n    var obj = {};\n    var comCount = 0;\n    var actCount = 0;\n    for(var commit in data){\n      var commitDate = new Date(data[commit].commit.committer.date.substring(0,10));\n      if(data[commit].author !== null && data[commit].author.login === name){\n        if(!obj[commitDate]){\n          obj[commitDate] = 1;\n          actCount++;\n        }\n        comCount++;\n      }\n    }\n    var arr = [comCount, actCount, 5];\n    return arr;\n  }\n\n  const series = React.useMemo(\n    () => ({\n      showPoints: false\n    }),\n    []\n  )\n\n  const commitData = React.useMemo(\n    () => [\n      {\n        label: userName,\n        data: array\n      }\n    ],\n    [array, userName],\n  )\n  const bubbleAxes = React.useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  return (\n    <>\n    {console.log(commits)}\n    </>\n  )\n\n}\n\nexport default Scatter\n"]},"metadata":{},"sourceType":"module"}